{"ast":null,"code":"var _jsxFileName = \"/home/kamila/Programowanie/projects/reactLearning/demo2/src/Application.js\";\nimport React, { Component } from 'react';\nimport HighScore from './HighScore';\nimport './css/style.css';\n\nclass Application extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.resetCout = e => {\n      this.setState({\n        count: 0,\n        overTen: false\n      });\n    };\n\n    this.state = {\n      count: 0,\n      overTen: false\n    };\n  }\n\n  componentDidUpdate(props, state) {\n    if (this.state.count > 3 && this.state.count !== state.count && !this.state.overTen) this.setState({\n      overTen: true\n    });\n  }\n\n  render() {\n    let count = this.state.count;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Calculator\"), React.createElement(HighScore, {\n      overTen: this.state.overTen,\n      onReset: this.resetCout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Click Me\")));\n  }\n\n}\n\nexport default Application;","map":{"version":3,"sources":["/home/kamila/Programowanie/projects/reactLearning/demo2/src/Application.js"],"names":["React","Component","HighScore","Application","constructor","props","handleClick","setState","count","state","resetCout","e","overTen","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,WATkB,GASJ,MAAM;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAkB;AAA1B,OAAd;AACH,KAXiB;;AAAA,SAkBlBE,SAlBkB,GAkBLC,CAAD,IAAO;AACf,WAAKJ,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAC,CADI;AAEVI,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAvBiB;;AAGd,SAAKH,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,CADE;AAETI,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAMDC,EAAAA,kBAAkB,CAACR,KAAD,EAAQI,KAAR,EAAc;AAC5B,QAAG,KAAKA,KAAL,CAAWD,KAAX,GAAmB,CAAnB,IAAwB,KAAKC,KAAL,CAAWD,KAAX,KAAqBC,KAAK,CAACD,KAAnD,IAA4D,CAAC,KAAKC,KAAL,CAAWG,OAA3E,EACA,KAAKL,QAAL,CAAc;AAACK,MAAAA,OAAO,EAAE;AAAV,KAAd;AACH;;AASDE,EAAAA,MAAM,GAAE;AAAA,QACCN,KADD,GACU,KAAKC,KADf,CACCD,KADD;AAGJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,OADxB;AAEI,MAAA,OAAO,EAAE,KAAKF,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKJ,WAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CANJ,CADJ;AAaH;;AA1C+B;;AA6CpC,eAAeH,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport HighScore from './HighScore';\nimport './css/style.css';\n\n\nclass Application extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            count: 0,\n            overTen: false,\n        }\n    }\n\n    handleClick = () => {\n        this.setState({count: this.state.count +1});\n    }\n\n    componentDidUpdate(props, state){\n        if(this.state.count > 3 && this.state.count !== state.count && !this.state.overTen)\n        this.setState({overTen: true})\n    }\n\n    resetCout = (e) => {\n        this.setState({\n            count:0,\n            overTen: false,\n        });\n    }\n\n    render(){\n        let {count} = this.state;\n\n        return (\n            <div>\n                <h1> Calculator</h1>\n                <HighScore \n                    overTen={this.state.overTen}\n                    onReset={this.resetCout}\n                />\n                <span>\n                    <button onClick={() => this.handleClick()}>Click Me</button>\n                </span>\n            </div>\n\n        );\n    }\n}\n\nexport default Application;"]},"metadata":{},"sourceType":"module"}